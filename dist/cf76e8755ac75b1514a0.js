import"./style.css";import*as THREE from"three";import{OrbitControls}from"three/examples/jsm/controls/OrbitControls.js";import{GLTFLoader}from"three/examples/jsm/loaders/GLTFLoader.js";import*as dat from"dat.gui";const gltfloader=new GLTFLoader,gui=new dat.GUI,canvas=document.querySelector("canvas.webgl"),scene=new THREE.Scene;console.log("test1"),gltfloader.load("earthpolycartest.glb",(e=>{scene.add(e.scene),gui.add(e.scene.rotation,"y").min(0).max(9)}));const pointLight=new THREE.PointLight(16777215,5);pointLight.position.x=2,pointLight.position.y=3,pointLight.position.z=40,scene.add(pointLight);const sizes={width:window.innerWidth,height:window.innerHeight};window.addEventListener("resize",(()=>{sizes.width=window.innerWidth,sizes.height=window.innerHeight,camera.aspect=sizes.width/sizes.height,camera.updateProjectionMatrix(),renderer.setSize(sizes.width,sizes.height),renderer.setPixelRatio(Math.min(window.devicePixelRatio,2))}));const camera=new THREE.PerspectiveCamera(75,sizes.width/sizes.height,.1,100);camera.position.x=0,camera.position.y=0,camera.position.z=30,scene.add(camera),console.log("test2");const renderer=new THREE.WebGLRenderer({canvas,alpha:!0});renderer.setSize(sizes.width,sizes.height),renderer.setPixelRatio(Math.min(window.devicePixelRatio,2));const clock=new THREE.Clock,tick=()=>{clock.getElapsedTime(),console.log("test3"),renderer.render(scene,camera),window.requestAnimationFrame(tick)};tick();